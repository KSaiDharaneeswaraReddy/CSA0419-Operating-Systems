#include<stdio.h>
#include<limits.h>

int main()
{
   
    int memory[] = {300, 600, 350, 200, 750, 125};
    int n = sizeof(memory) / sizeof(memory[0]);

  
    int process[] = {115, 500, 358, 200, 375};
    int m = sizeof(process) / sizeof(process[0]);

    
    int allocation[m];


    for (int i = 0; i < m; i++)
        allocation[i] = -1;

  
    for (int i = 0; i < m; i++)
    {
 
        int best_fit_index = -1;
        int best_fit_size = INT_MAX;
        for (int j = 0; j < n; j++)
        {
            if (memory[j] >= process[i] && memory[j] < best_fit_size)
            {
                best_fit_index = j;
                best_fit_size = memory[j];
            }
        }


        if (best_fit_index != -1)
        {
            allocation[i] = best_fit_index;
            memory[best_fit_index] -= process[i];
        }
    }

    
    printf("Process No.\tProcess Size\tBlock no.\n");
    for (int i = 0; i < m; i++)
    {
        printf("%d\t\t%d\t\t", i+1, process[i]);
        if (allocation[i] != -1)
            printf("%d\n", allocation[i]+1);
        else
            printf("Not Allocated\n");
    }
    return 0;
}
